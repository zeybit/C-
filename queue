#include <iostream>

using namespace std;
class QNode
{
public:
  int data;
  QNode *next;
    QNode (int data)
  {
    this->data = data;
    this->next = NULL;
  }
};
class Queue
{
public:
  QNode * front, *rear;
  Queue ()
  {
    front = rear = NULL;
  }
  void enqueue (int element)
  {
    QNode *temp = new QNode (element);
    if (rear == NULL)
      {
	front = rear = temp;
	cout << front->data << "is enqueued" << endl;
	return;
      }
    rear->next = temp;
    rear = temp;
    cout << rear->data << "is enqueued" << endl;
  }
  void dequeue ()
  {
    if (front == NULL)
      return;
    QNode *temp = front;
    front = front->next;
    if (front == NULL)
      rear == NULL;
    cout << temp->data << "is dequeued" << endl;
    delete (temp);

  }
};

int
main ()
{
  Queue q;
  q.enqueue (36);
  q.enqueue (29);
  q.enqueue (69);
  q.enqueue (11);
 
  q.enqueue (99);
  q.enqueue (55);
  q.enqueue (80);

  q.dequeue ();
  q.dequeue ();
  cout << "front element:"
    << ((q.front != NULL) ? (q.front)->data : -1) << endl;
  cout << "rear element:" << ((q.rear != NULL) ? (q.rear)->data : -1) << endl;
  return 0;


  return 0;
}

